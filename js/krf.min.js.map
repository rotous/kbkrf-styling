{"version":3,"sources":["slider.js","components/faq.js","components/form.js","pages/wachtwoordvergeten.js"],"names":["window","onload","mySwiper","Swiper","loop","autoplay","delay","pagination","el","clickable","swiperContainer","document","querySelector","on","classList","add","remove","addEventListener","e","faqs","querySelectorAll","onClickFaqButton","button","target","answer","parentNode","isPressed","getAttribute","setAttribute","style","display","length","buttons","Array","prototype","forEach","call","faq","btns","btn","push","addHandlers","forms","form","undefined","btnPasnummer","btnEmailAdres","formSectionPasnummer","formSectionEmail","body","contains","getElementById","onClickBtnPasnummer","onClickBtnEmail"],"mappings":"AAAAA,OAAAC,OAAA,WACA,IAAAC,EAAA,IAAAC,OAAA,oBAAA,CACAC,MAAA,EACAC,SAAA,CACAC,MAAA,KAIAC,WAAA,CACAC,GAAA,qBACAC,WAAA,KAIAC,EAAAC,SAAAC,cAAA,qBAKAV,EAAAW,GAAA,6BAAA,WACAH,EAAAI,UAAAC,IAAA,aAEAb,EAAAW,GAAA,2BAAA,WACAH,EAAAI,UAAAE,OAAA,cCvBAhB,OAAAiB,iBAAA,OAAA,SAAAC,GAGA,IAAAC,EAAAR,SAAAS,iBAAA,UA+BA,SAAAC,EAAAH,GACA,IAAAI,EAAAJ,EAAAK,OACAC,EAAAF,EAAAG,WAAAA,WAAAb,cAAA,eACAc,EAAA,SAAAJ,EAAAK,aAAA,gBACAL,EAAAM,aAAA,eAAAF,EAAA,OAAA,SACAJ,EAAAM,aAAA,gBAAAF,EAAA,OAAA,SACAF,EAAAK,MAAAC,QAAAJ,EAAA,QAAA,OApCAP,EAAAY,QAgBA,WACA,IAAAC,EAAA,GACAC,MAAAC,UAAAC,QAAAC,KAAAjB,EAAA,SAAAkB,GACA,IAAAC,EAAAD,EAAAjB,iBAAA,eACAa,MAAAC,UAAAC,QAAAC,KAAAE,EAAA,SAAAC,GACAP,EAAAQ,KAAAD,OAIAP,EAAAG,QAAA,SAAAb,GACAA,EAAAL,iBAAA,QAAAI,KAhBAoB,KCdAzC,OAAAiB,iBAAA,OAAA,WACA,IAAAyB,EAAA/B,SAAAS,iBAAA,0BAIAa,MAAAC,UAAAC,QAAAC,KAAAM,EAAA,SAAAC,GACAA,EAAAf,aAAA,kBAAAgB,OCNA5C,OAAAiB,iBAAA,OAAA,SAAAC,GAUA,IAAA2B,EACAC,EACAC,EACAC,EAVArC,SAAAsC,KAAAnC,UAAAoC,SAAA,yBAwBAL,EAAAlC,SAAAwC,eAAA,iBACAL,EAAAnC,SAAAwC,eAAA,aACAJ,EAAApC,SAAAwC,eAAA,2BACAH,EAAArC,SAAAwC,eAAA,sBAOAN,EAAA5B,iBAAA,QAAAmC,GACAN,EAAA7B,iBAAA,QAAAoC,IAOA,SAAAD,EAAAlC,GACA,IAAAQ,EAAA,SAAAmB,EAAAlB,aAAA,gBACAkB,EAAAjB,aAAA,gBAAAF,GACAoB,EAAAlB,aAAA,eAAA,SAEAoB,EAAAnB,MAAAC,QAAA,OACAiB,EAAAlB,MAAAC,QAAAJ,EAAA,OAAA,QAOA,SAAA2B,EAAAnC,GACA,IAAAQ,EAAA,SAAAoB,EAAAnB,aAAA,gBACAmB,EAAAlB,aAAA,gBAAAF,GACAmB,EAAAjB,aAAA,eAAA,SAEAmB,EAAAlB,MAAAC,QAAA,OACAkB,EAAAnB,MAAAC,QAAAJ,EAAA,OAAA","file":"krf.min.js","sourcesContent":["window.onload = function () {\n\tvar mySwiper = new Swiper ('.swiper-container', {\n\t\tloop: true,\n\t\tautoplay: {\n\t\t\tdelay: 5000,\n\t\t},\n\n\t\t// Add pagination\n\t\tpagination: {\n\t\t\tel: '.swiper-pagination',\n\t\t\tclickable: true,\n\t\t},\n\t});\n\n\tvar swiperContainer = document.querySelector('.swiper-container');\n\n\t// Add a class when the slider is sliding. This class is needed because\n\t// Chrome seems to have a bug where it shows a line of the neighbouring\n\t// slides outside the container despite overflow hidden.\n\tmySwiper.on('slideChangeTransitionStart', function() {\n\t\tswiperContainer.classList.add('sliding');\n\t});\n\tmySwiper.on('slideChangeTransitionEnd', function() {\n\t\tswiperContainer.classList.remove('sliding');\n\t});\n};\n","window.addEventListener('load', function(e) {\n\n\t// target the right page\n\tvar faqs = document.querySelectorAll('ul.faq');\n\tif (!faqs.length) {\n\t\treturn;\n\t}\n\n\tinit();\n\n\t/**\n\t * Initializes the page\n\t */\n\tfunction init() {\n\t\taddHandlers();\n\t}\n\n\t/**\n\t * Sets event listeners for the page\n\t */\n\tfunction addHandlers() {\n\t\tvar buttons = [];\n\t\tArray.prototype.forEach.call(faqs, function(faq) {\n\t\t\tvar btns = faq.querySelectorAll('.faq-button');\n\t\t\tArray.prototype.forEach.call(btns, function(btn) {\n\t\t\t\tbuttons.push(btn);\n\t\t\t});\n\t\t});\n\n\t\tbuttons.forEach(function(button) {\n\t\t\tbutton.addEventListener('click', onClickFaqButton);\n\t\t})\n\t}\n\n\tfunction onClickFaqButton(e) {\n\t\tvar button = e.target;\n\t\tvar answer = button.parentNode.parentNode.querySelector('.faq-answer');\n\t\tvar isPressed = button.getAttribute('aria-pressed') !== 'true';\n\t\tbutton.setAttribute('aria-pressed', isPressed ? 'true' : 'false');\n\t\tbutton.setAttribute('aria-expanded', isPressed ? 'true' : 'false');\n\t\tanswer.style.display = isPressed ? 'block' : 'none';\n\t}\n});\n","window.addEventListener('load', function() {\n\tvar forms = document.querySelectorAll('form:not([novalidate])');\n\n\t// For now we don't validate, so add the novalidate attribute and return\n\t// Once we will enable client-side validation, we must remove this\n\tArray.prototype.forEach.call(forms, function(form) {\n\t\tform.setAttribute('novalidate', undefined);\n\t});\n\treturn;\n\n\tif (forms.length === 0) {\n\t\treturn;\n\t}\n\n\t// Run over all forms that need validation\n\tArray.prototype.forEach.call(forms, function(form) {\n\t\t// Add the novalidate attribute, as we will do it ourself\n\t\tform.setAttribute('novalidate', true);\n\n\t\tform.addEventListener('submit', function(e) {\n\t\t\te.preventDefault();\n\n\t\t\t// Check inputs with validation\n\t\t\tvar inputs = form.querySelectorAll('input:invalid');\n\n\t\t\tif (inputs.length === 0) {\n\t\t\t\t// No validation error were found, so we can submit\n\t\t\t\treturn form.submit();\n\t\t\t}\n\n\t\t\t// First hide all error messages\n\t\t\tvar errorMessages = form.querySelectorAll('.error-message-visible');\n\t\t\tArray.prototype.forEach.call(errorMessages, function(errorMessage) {\n\t\t\t\terrorMessage.classList.remove('error-message-visible');\n\t\t\t\tvar input = form.querySelector('[data-error-message=' + errorMessage.id + ']');\n\t\t\t\tinput.classList.remove('with-visible-error-message');\n\t\t\t});\n\n\t\t\t// Show the error messages for invalid inputs\n\t\t\tArray.prototype.forEach.call(inputs, function(input) {\n\t\t\t\tvar errorMessageId = input.getAttribute('data-error-message');\n\t\t\t\tif (!errorMessageId) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinput.classList.add('with-visible-error-message');\n\t\t\t\tvar errorMessage = document.getElementById(errorMessageId);\n\t\t\t\terrorMessage.classList.add('error-message-visible');\n\t\t\t});\n\n\t\t});\n\t});\n});\n","window.addEventListener('load', function(e) {\n\n\t// target the right page\n\tif (!document.body.classList.contains('wachtwoord-vergeten')) {\n\t\treturn;\n\t}\n\n\tinit();\n\n\t// References to the elements on the page\n\tvar btnPasnummer;\n\tvar btnEmailAdres;\n\tvar formSectionPasnummer;\n\tvar formSectionEmail;\n\n\t/**\n\t * Initializes the page\n\t */\n\tfunction init() {\n\t\tgetELements();\n\t\taddHandlers();\n\t}\n\n\t/**\n\t * Gets references to the elements on the page\n\t */\n\tfunction getELements() {\n\t\tbtnPasnummer = document.getElementById('btn-pasnummer');\n\t\tbtnEmailAdres = document.getElementById('btn-email');;\n\t\tformSectionPasnummer = document.getElementById('form-section-passnummer')\n\t\tformSectionEmail = document.getElementById('form-section-email')\n\t}\n\n\t/**\n\t * Sets event listeners for the page\n\t */\n\tfunction addHandlers() {\n\t\tbtnPasnummer.addEventListener('click', onClickBtnPasnummer);\n\t\tbtnEmailAdres.addEventListener('click', onClickBtnEmail);\n\t}\n\n\t/**\n\t * Handler for the click event of the pasnummer button\n\t * @param {EventObject} e The click event\n\t */\n\tfunction onClickBtnPasnummer(e) {\n\t\tvar isPressed = btnPasnummer.getAttribute('aria-pressed') === 'true';\n\t\tbtnPasnummer.setAttribute('aria-pressed', !isPressed);\n\t\tbtnEmailAdres.setAttribute('aria-pressed', 'false');\n\n\t\tformSectionEmail.style.display = 'none';\n\t\tformSectionPasnummer.style.display = isPressed ? 'none' : 'block';\n\t}\n\n\t/**\n\t * Handler for the click event of the email button\n\t * @param {EventObject} e The click event\n\t */\n\tfunction onClickBtnEmail(e) {\n\t\tvar isPressed = btnEmailAdres.getAttribute('aria-pressed') === 'true';\n\t\tbtnEmailAdres.setAttribute('aria-pressed', !isPressed);\n\t\tbtnPasnummer.setAttribute('aria-pressed', 'false');\n\n\t\tformSectionPasnummer.style.display = 'none';\n\t\tformSectionEmail.style.display = isPressed ? 'none' : 'block';\n\t}\n\n});\n"]}